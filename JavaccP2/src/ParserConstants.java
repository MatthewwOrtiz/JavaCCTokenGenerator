/* Generated By:JavaCC: Do not edit this line. ParserConstants.java */

/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface ParserConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int DBLCONST = 9;
  /** RegularExpression Id. */
  int INTCONST = 10;
  /** RegularExpression Id. */
  int ADDOP = 11;
  /** RegularExpression Id. */
  int MULOP = 12;
  /** RegularExpression Id. */
  int SUBOP = 13;
  /** RegularExpression Id. */
  int SEMICOL = 14;
  /** RegularExpression Id. */
  int COMMA = 15;
  /** RegularExpression Id. */
  int BOOLN = 16;
  /** RegularExpression Id. */
  int ELS = 17;
  /** RegularExpression Id. */
  int IMPL = 18;
  /** RegularExpression Id. */
  int NEWAR = 19;
  /** RegularExpression Id. */
  int RTRN = 20;
  /** RegularExpression Id. */
  int MOD = 21;
  /** RegularExpression Id. */
  int GRTEQ = 22;
  /** RegularExpression Id. */
  int LESSEQ = 23;
  /** RegularExpression Id. */
  int GRT = 24;
  /** RegularExpression Id. */
  int AND = 25;
  /** RegularExpression Id. */
  int RTBRC = 26;
  /** RegularExpression Id. */
  int RTPRN = 27;
  /** RegularExpression Id. */
  int BOOLCONST = 28;
  /** RegularExpression Id. */
  int _INT = 29;
  /** RegularExpression Id. */
  int DOT = 30;
  /** RegularExpression Id. */
  int LFTBRACKET = 31;
  /** RegularExpression Id. */
  int OR = 32;
  /** RegularExpression Id. */
  int BRK = 33;
  /** RegularExpression Id. */
  int EXTNDS = 34;
  /** RegularExpression Id. */
  int NUL = 35;
  /** RegularExpression Id. */
  int STRNG = 36;
  /** RegularExpression Id. */
  int STRINGCONST = 37;
  /** RegularExpression Id. */
  int LESS = 38;
  /** RegularExpression Id. */
  int NEQ = 39;
  /** RegularExpression Id. */
  int EQL = 40;
  /** RegularExpression Id. */
  int ASSIGN = 41;
  /** RegularExpression Id. */
  int LFTPRN = 42;
  /** RegularExpression Id. */
  int LFTBRACE = 43;
  /** RegularExpression Id. */
  int RTBRACE = 44;
  /** RegularExpression Id. */
  int _IF = 45;
  /** RegularExpression Id. */
  int NW = 46;
  /** RegularExpression Id. */
  int READLN = 47;
  /** RegularExpression Id. */
  int _WHLE = 48;
  /** RegularExpression Id. */
  int DIV = 49;
  /** RegularExpression Id. */
  int NOT = 50;
  /** RegularExpression Id. */
  int DBL = 51;
  /** RegularExpression Id. */
  int CLS = 52;
  /** RegularExpression Id. */
  int FR = 53;
  /** RegularExpression Id. */
  int INTRFC = 54;
  /** RegularExpression Id. */
  int PRNTLN = 55;
  /** RegularExpression Id. */
  int _VOID = 56;
  /** RegularExpression Id. */
  int kill = 57;
  /** RegularExpression Id. */
  int ID = 58;
  /** RegularExpression Id. */
  int LETTER = 59;

  /** Lexical state. */
  int DEFAULT = 0;
  /** Lexical state. */
  int ML_COMMENT_STATE = 1;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "<token of kind 2>",
    "\"/*\"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\"",
    "\"*/\"",
    "<token of kind 8>",
    "<DBLCONST>",
    "<INTCONST>",
    "\"+\"",
    "\"*\"",
    "\"-\"",
    "\";\"",
    "\",\"",
    "\"boolean\"",
    "\"else\"",
    "\"implements\"",
    "\"newarray\"",
    "\"return\"",
    "\"%\"",
    "\">=\"",
    "\"<=\"",
    "\">\"",
    "\"&\"",
    "\"]\"",
    "\")\"",
    "<BOOLCONST>",
    "\"int\"",
    "\".\"",
    "\"[\"",
    "\"|\"",
    "\"break\"",
    "\"extends\"",
    "\"null\"",
    "\"string\"",
    "<STRINGCONST>",
    "\"<\"",
    "\"!=\"",
    "\"==\"",
    "\"=\"",
    "\"(\"",
    "\"{\"",
    "\"}\"",
    "\"if\"",
    "\"new\"",
    "\"readln\"",
    "\"while\"",
    "\"/\"",
    "\"!\"",
    "\"double\"",
    "\"class\"",
    "\"for\"",
    "\"interface\"",
    "\"println\"",
    "\"void\"",
    "\"#\"",
    "<ID>",
    "<LETTER>",
  };

}
